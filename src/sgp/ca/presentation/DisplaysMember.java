/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sgp.ca.presentation;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import sgp.ca.businesslogic.MemberDao;
import sgp.ca.domain.Member;

/**
 *
 * @author Esteban
 */
public class DisplaysMember extends javax.swing.JFrame {

    /**
     * Creates new form DisplaysMember
     */
    public DisplaysMember() {
        initComponents();
        displaysMembers();
        this.setLocation(200,200);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMembers = new javax.swing.JTable();
        jBRegisterMember = new javax.swing.JButton();
        jBLet = new javax.swing.JButton();
        jBDeleteMember = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableMembers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableMembers);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 1080, 260));

        jBRegisterMember.setText("Registrar Miembro");
        jBRegisterMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRegisterMemberActionPerformed(evt);
            }
        });
        getContentPane().add(jBRegisterMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jBLet.setText("Salir");
        jBLet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLetActionPerformed(evt);
            }
        });
        getContentPane().add(jBLet, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 120, -1));

        jBDeleteMember.setText("Remover");
        jBDeleteMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDeleteMemberActionPerformed(evt);
            }
        });
        getContentPane().add(jBDeleteMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 120, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sgp/ca/presentation/Images/Miembros de CA.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -320, 850, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBRegisterMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRegisterMemberActionPerformed
        AddMember addMember = new AddMember();
        addMember.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBRegisterMemberActionPerformed

    private void jBLetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLetActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBLetActionPerformed

    private void jBDeleteMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDeleteMemberActionPerformed
        int confirmation = 0;
        MemberDao memberDao = new MemberDao();
        int selectionTable = jTableMembers.getSelectedRow();
        if(selectionTable>=0){
            String user = jTableMembers.getValueAt(selectionTable,3).toString();
            confirmation = memberDao.deleteMember(user);
            if(confirmation==1){
                javax.swing.JOptionPane.showMessageDialog(this,"Integrante eliminado con exito \n","Confirmaci贸n de eliminaci贸n",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                displaysMembers();
            }
        }else{
            javax.swing.JOptionPane.showMessageDialog(this,"Debe selecionar un Integrante para eliminarlo \n","Confirmaci贸n de eliminaci贸n",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_jBDeleteMemberActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplaysMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplaysMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplaysMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplaysMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplaysMember().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBDeleteMember;
    private javax.swing.JButton jBLet;
    private javax.swing.JButton jBRegisterMember;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMembers;
    // End of variables declaration//GEN-END:variables

    public void displaysMembers(){
        int i = 0;
        DefaultTableModel tableMembers = new DefaultTableModel();
        tableMembers.addColumn("Nombre");
        tableMembers.addColumn("Apellido paterno");
        tableMembers.addColumn("Apellido Materno");
        tableMembers.addColumn("Usuario");
        tableMembers.addColumn("Numero Celular");
        tableMembers.addColumn("Correo");
        tableMembers.addColumn("Edad");
        tableMembers.addColumn("perfil PRODEP");
        tableMembers.addColumn("LGCA");
        jTableMembers.setModel(tableMembers);
        
        String [] members = new String [10];
        ArrayList<Member> MemberList = new ArrayList<Member>();
        MemberDao memberDao = new MemberDao();
        MemberList = memberDao.displayMembers();
        while(i<MemberList.size()){
            members[0] = MemberList.get(i).getName();
            members[1] = MemberList.get(i).getLastName();
            members[2] = MemberList.get(i).getMotherLastName();
            members[3] = MemberList.get(i).getUser();
            members[4] = MemberList.get(i).getCellPhoneNumber();
            members[5] = MemberList.get(i).getMail();
            members[6] = String.valueOf(MemberList.get(i).getAge());
            members[7] = MemberList.get(i).getProfileProdep();
            members[8] = MemberList.get(i).getLGCA();
            i++;
            tableMembers.addRow(members);
        }
    }
}
